ARG IMAGE
FROM  golang:alpine AS build
ARG WORKLOAD
RUN echo "Starting build of workload  ${WORKLOAD} "


RUN test -n "${WORKLOAD}" || (echo "workloadname  not set" && false)

RUN echo "Updating Build image "

RUN apk update && apk add git
WORKDIR /
RUN git clone https://github.com/davidhadas/seal-control.git
WORKDIR /seal-control

# cross compile a seal-wrap for linux/amd64
RUN GOARCH="amd64" GOOS="linux"  go build ./cmd/seal-wrap

# Create an egg (localy)
RUN go build ./cmd/seal
COPY ./kubeconfig /root/.kube/config
RUN ./seal wl ${WORKLOAD} egg > /egg.txt
# Create a linux/amd64 seal wraped image 

FROM --platform=linux/amd64 ${IMAGE}
COPY --from=build /seal-control/seal-wrap /bin/seal-wrap
COPY --from=build /egg.txt /egg.txt

# RUN CGO_ENABLED=0 GOOS=linux go build cmd/seal-wrap/wrap.go
# cli: GOARCH="amd64" GOOS=linux go build ../../cmd/seal-wrap/wrap.go
# COPY wrap /bin/seal-wrap
# COPY egg.txt /
